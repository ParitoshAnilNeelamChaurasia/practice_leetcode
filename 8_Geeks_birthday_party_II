// https://practice.geeksforgeeks.org/contest/hiring-mts-geeksforgeeks/problems

#include "bits/stdc++.h"
using namespace std;

// } Driver Code Ends
//User function Template for C++

class Solution{   
public:
    
    int dp[1001][1001] ;
    
    const int  mode = 1e9+7 ;
    int f(int hung , vector<int> &calories , int m)
    {
        if(hung == 0)
        {
            return 1 ;
        }
        
        if(dp[hung][m] != -1)
        {
            return dp[hung][m] ;
        }
        
        if(m == 0)
        {
            return 0 ;
        }
        
        if(hung >= calories[m-1])
        {
            int x = f(hung - calories[m-1] , calories , m)% mode + f(hung , calories , m - 1)% mode ;
            return dp[hung][m] = x % mode;
        }
        return dp[hung][m] = f(hung , calories , m-1)% mode ;
    }
    vector<int> numberOfWays(int n, vector<int>& hunger, int m, vector<int>& calories)
    {
        vector<int> ans(n) ;
        
        memset(dp,-1,sizeof(dp)) ;
        
        for(int i = 0 ; i < n ; ++i)
        {
            ans[i] = f(hunger[i] , calories , m) % mode;
        }
        
        return ans;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n,m;
        cin>>n>>m;
        vector<int>hunger(n),calories(m);
        for(int i=0;i<n;i++)
            cin>>hunger[i];
        for(int i=0;i<m;i++)
            cin>>calories[i];
        Solution ob;
        vector<int>ans=ob.numberOfWays(n,hunger,m,calories);
        for(auto it:ans)
            cout<<it<<" ";
        cout<<endl;
    }
}
// } Driver Code Ends
